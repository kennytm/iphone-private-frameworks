/**
 * This header is generated by class-dump-z 0.2-1.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/MessageUI.framework/MessageUI
 */

#import "MessageUI-Structs.h"
#import "MFContactsSearchConsumer.h"
#import "UITextContentViewDelegate.h"
#import "UITableViewDelegate.h"
#import "UITableViewDataSource.h"
#import "UIScrollViewDelegate.h"
#import <UIKit/UITransitionView.h>
#import <UIKit/UITextContentView.h>

@class UIView, UINavigationItem, MFComposeFromView, UIBarButtonItem, UIScrollView, UITextContentView, UIKeyboard, UIToolbar, UIPickerView, ABPeoplePickerNavigationController, UITableView, MFContactsSearchManager, UIResponder, ComposeRecipientView, NSNumber, MFComposeHeaderView, MFContactsSearchResultsModel, ComposeBodyField, MFComposeSubjectView;
@protocol MailComposeViewDelegate;

@interface MailComposeView : UITransitionView <UITextContentViewDelegate, UIScrollViewDelegate, UITableViewDelegate, UITableViewDataSource, MFContactsSearchConsumer> {
	UIView* _contentView;
	UINavigationItem* _navigationItem;
	UIBarButtonItem* _closeButtonItem;
	UIBarButtonItem* _sendButtonItem;
	ComposeBodyField* _bodyField;
	UIView* _headerView;
	UIScrollView* _bodyScroller;
	UITextContentView* _textView;
	UIKeyboard* _keyboard;
	UIToolbar* _keyboardButtonBar;
	ComposeRecipientView* _toField;
	ComposeRecipientView* _ccField;
	ComposeRecipientView* _bccField;
	MFComposeSubjectView* _subjectField;
	MFComposeFromView* _fromField;
	MFComposeHeaderView* _multiField;
	UIView* _shadowView;
	UIPickerView* _fromPickerView;
	ABPeoplePickerNavigationController* _peoplePicker;
	float _finalToHeight;
	float _finalCCHeight;
	float _offsetBeforeSearch;
	id _sendTarget;
	SEL _sendAction;
	id _closeTarget;
	SEL _closeAction;
	id _presentPeoplePickerTarget;
	SEL _presentPeoplePickerAction;
	id _dismissPeoplePickerTarget;
	SEL _dismissPeoplePickerAction;
	ComposeRecipientView* _lastChangedRecipientView;
	ComposeRecipientView* _activeRecipientView;
	UITableView* _searchResultsTable;
	UIResponder* _firstResponderBeforeSheet;
	BOOL _animationDisabled;
	float _adjustViewHeight;
	id<MailComposeViewDelegate> _mailComposeViewDelegate;
	MFContactsSearchManager* _contactsSearchActor;
	MFContactsSearchResultsModel* _searchResultsModel;
	NSNumber* _searchTaskID;
	unsigned _scheduledDeferedProgressMonitoring : 1;
	unsigned _toHeightChanging : 1;
	unsigned _ccHeightChanging : 1;
	unsigned _pinToBottomOfHeaderView : 1;
	unsigned _changingRecipients : 1;
	unsigned _isLoading : 1;
	unsigned _multiFieldOverride : 1;
	unsigned _pendingMultiFieldOverride : 1;
	unsigned _isRotating : 1;
}
@property(assign, nonatomic) id<MailComposeViewDelegate> composeViewDelegate;
@property(retain, nonatomic) NSNumber* searchTaskID;
-(id)_searchResultsTable;
-(BOOL)_fixUpView:(id)view changingView:(id)view2 toSize:(CGSize)size fieldFrame:(CGRect*)frame;
-(void)composeHeaderViewClicked:(id)clicked;
-(void)_setupField:(id)field isNew:(BOOL)aNew changingView:(id)view toSize:(CGSize)size fieldFrame:(CGRect*)frame visible:(BOOL)visible;
-(void)_setupField:(id*)field withLabel:(id)label property:(int)property changingView:(id)view toSize:(CGSize)size fieldFrame:(CGRect*)frame visible:(BOOL)visible;
-(void)_getLabel:(id*)label andAccountDescription:(id*)description forState:(XXStruct_mj3sZD)state;
-(void)_setupMultiFieldWithState:(XXStruct_mj3sZD)state changingView:(id)view toSize:(CGSize)size fieldFrame:(CGRect*)frame;
-(void)_setupFromFieldChangingView:(id)fieldChangingView toSize:(CGSize)size fieldFrame:(CGRect*)frame visible:(BOOL)visible;
-(void)_setupSubjectField:(CGRect*)field;
-(void)_setupBodyFieldWithHeaderFrame:(CGRect)headerFrame enclosingFrame:(CGRect)frame changingView:(id)view frameToPin:(CGRect)pin wasSearching:(BOOL)searching;
-(void)_setContentSizeAppropriately;
-(void)_layoutSubviewsWithActiveRecipientView:(BOOL)activeRecipientView changingView:(id)view toSize:(CGSize)size;
-(void)getOptionalFieldState:(XXStruct_mj3sZD*)state;
-(void)_layoutSubviews:(BOOL)subviews changingView:(id)view toSize:(CGSize)size;
-(void)_layoutSubviews:(BOOL)subviews;
-(instancetype)initWithFrame:(CGRect)frame navigationItem:(UINavigationItem*)item delegate:(id)delegate;
-(id)keyboard;
-(id)bottomView;
// inherited: -(void)dealloc;
-(void)setAutoresizingMask:(unsigned)mask;
-(BOOL)endEditing:(BOOL)editing;
-(BOOL)allowSend;
-(BOOL)isLoading;
-(void)setIsLoading:(BOOL)loading;
-(id)hitTest:(CGPoint)test withEvent:(id)event;
-(ComposeRecipientView*)toField;
-(ComposeRecipientView*)ccField;
-(ComposeRecipientView*)bccField;
-(MFComposeSubjectView*)subjectField;
-(MFComposeFromView*)fromField;
-(ComposeBodyField*)bodyField;
-(void)adjustScrollerContentSize;
-(void)willRotateToInterfaceOrientation:(int)interfaceOrientation duration:(double)duration;
-(void)_finishUpRotationToInterfaceOrientation:(int)interfaceOrientation;
-(void)willAnimateRotationToInterfaceOrientation:(int)interfaceOrientation duration:(double)duration;
-(void)didAnimateFirstHalfOfRotationToInterfaceOrientation:(int)interfaceOrientation;
-(void)didRotateFromInterfaceOrientation:(int)interfaceOrientation;
-(void)composeBodyFieldFrameChanged:(id)changed;
-(void)layoutSubviews;
-(void)composeBodyFieldDidFinishLoadForFrame:(id)composeBodyField;
-(void)_adjustScrollerForBottomViewHeight:(float)bottomViewHeight;
-(CGRect)_frameForFromPicker;
-(void)setPickerVisible:(BOOL)visible;
-(void)_positionKeyboardForInterfaceOrientation:(int)interfaceOrientation orderedIn:(BOOL)anIn;
-(void)_keyboardHideCompleted;
-(void)_keyboardAnimationCompleted;
-(void)automaticKeyboardFinishedAppearing:(id)appearing;
-(void)setKeyboardVisible:(BOOL)visible animate:(BOOL)animate;
-(BOOL)isKeyboardVisible;
-(BOOL)isPickerVisible;
-(void)pickerNeedsToBeRefreshed;
-(void)setAnimationDisabled:(BOOL)disabled;
-(void)scrollerDidScroll:(id)scroller;
-(void)setNavigationBarTitle:(id)title;
-(void)setSendTarget:(id)target action:(SEL)action;
-(void)setCloseTarget:(id)target action:(SEL)action;
-(void)_sendButtonClicked:(id)clicked;
-(void)_closeButtonClicked:(id)clicked;
-(void)setSendEnabled:(BOOL)enabled closeEnabled:(BOOL)enabled2;
-(void)setSendEnabled:(BOOL)enabled;
-(void)_saveFirstResponder;
-(void)_restoreFirstResponder;
-(void)displayAlertSheet:(id)sheet;
-(void)dismissAlertSheet:(id)sheet animate:(BOOL)animate willClose:(BOOL)close;
-(void)setEnabled:(BOOL)enabled changingUI:(BOOL)ui;
-(int)activeAddressField;
-(id)activeRecipientText;
-(void)composeRecipientView:(id)view didChangeSize:(CGSize)size;
-(void)composeRecipientViewWillBecomeFirstResponder:(id)composeRecipientView;
-(void)composeRecipientViewDidResignFirstResponder:(id)composeRecipientView;
-(void)composeRecipientViewDidBecomeFirstResponder:(id)composeRecipientView;
-(id)composeRecipientView:(id)view composeRecipientForAddress:(id)address;
-(id)composeRecipientView:(id)view composeRecipientForRecord:(void*)record identifier:(int)identifier;
-(void)composeRecipientView:(id)view textDidChange:(id)text;
// in a protocol: -(void)consumeSearchResults:(id)results type:(int)type taskID:(id)anId;
// in a protocol: -(void)finishedSearchingForType:(int)type;
// in a protocol: -(void)finishedTaskWithID:(id)anId;
// in a protocol: -(void)beganNetworkActivity;
// in a protocol: -(void)endedNetworkActivity;
-(void)composeRecipientViewDidFinishEnteringRecipient:(id)composeRecipientView;
-(void)composeRecipientView:(id)view requestDeleteRecipientAtIndex:(int)index;
-(void)removeFromSuperview;
-(void)setPresentPeoplePickerTarget:(id)target action:(SEL)action;
-(void)setDismissPeoplePickerTarget:(id)target action:(SEL)action;
-(void)dismissPeoplePicker;
-(void)composeRecipientViewRequestAddRecipient:(id)recipient;
-(void)transitionViewDidComplete:(id)transitionView;
-(void)composeRecipientViewDidFinishPickingRecipient:(id)composeRecipientView;
// in a protocol: -(int)tableView:(id)view numberOfRowsInSection:(int)section;
// in a protocol: -(id)tableView:(id)view cellForRowAtIndexPath:(id)indexPath;
// in a protocol: -(void)tableView:(id)view didSelectRowAtIndexPath:(id)indexPath;
-(void)parentWillClose;
-(void)parentDidClose;
// in a protocol: -(BOOL)textContentView:(id)view shouldScrollForPendingContentSize:(CGSize)pendingContentSize;
// in a protocol: -(BOOL)textContentView:(id)view shouldChangeSizeForContentSize:(CGSize)contentSize;
// in a protocol: -(void)scrollViewDidScroll:(id)scrollView;
// in a protocol: -(void)scrollViewWillBeginDragging:(id)scrollView;
// in a protocol: -(void)scrollViewDidEndDragging:(id)scrollView willDecelerate:(BOOL)decelerate;
// in a protocol: -(void)scrollViewDidEndDecelerating:(id)scrollView;
@end

