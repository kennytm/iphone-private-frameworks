/**
 * This header is generated by class-dump-z 0.1-11o.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 */

#import "ActorKit-Structs.h"
#import <Foundation/NSObject.h>

@class NSThread, NSConditionLock, NSNumber, NSRunLoop;

enum AKDispatchQueueState {
	AKDispatchQueueState_Initialized = 0,
	AKDispatchQueueState_Start = 1,
	AKDispatchQueueState_Running = 2,
	AKDispatchQueueState_Stop = 5,
	AKDispatchQueueState_Destroyed = 6
};

@interface AKDispatchQueue : NSObject {
	int _kqueueFD;
	int _keventFDs[2];
	NSThread* _thread;
	qed_queue_u* _queue;
	NSConditionLock* _runStateLock;
}
/** Return a shared instance of the dispatch queue of the current run loop. */
+(id)currentRunLoopDispatchQueue;

/// Create a thread for a migrant dispatch queue. (?)
+(id)migrantDispatchQueue;

/** Create a thread and dispatch queue, and call runThreadDispatchQueue: on that queue. */
+(AKDispatchQueue*)newThreadRunLoopDispatchQueue;

//----- The following methods, except -start and -stop, shouldn't be called.

/** The state must be 1, 2 or 5. */
-(void)switchToState:(NSNumber*)state;
-(instancetype)init;
-(void)dealloc;

/** Returns the low-level queue object. */
-(qed_queue_u*)queue;

/// \internal
-(void)_afterStartedAddRunLoopSourceTo:(NSRunLoop*)runLoop;

/** Create a run loop and associate with the internal thread. */
-(void)runThreadDispatchQueue:(NSThread*)thread;

/// Start the dispatch queue run loop.
-(void)start;

/// Stop the dispatch queue run loop.
-(void)stop;
@end

