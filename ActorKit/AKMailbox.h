/**
 * This header is generated by class-dump-z 0.1-11o.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 */

#import <Foundation/NSProxy.h>
#import "ActorKit-Structs.h"

@class AKDispatchQueue, Protocol;

@interface AKMailbox : NSProxy {
	id _target;
	Protocol* _publicProtocol;
	Protocol* _privateProtocol;
	AKDispatchQueue* _dispatchQueue;
	qed_queue_u* _queue;
}
@property(assign, nonatomic) id target;

/// Create a mailbox with target and public protocol.
+(id)mailboxWithTarget:(id)target protocol:(id)protocol;
-(instancetype)initWithTarget:(id)target protocol:(id)protocol;
-(void)dealloc;

/// Checks whether the mailbox conforms to the specific protocol (either privately or publicly).
-(BOOL)conformsToProtocol:(Protocol*)protocol;


-(BOOL)respondsToSelector:(SEL)selector;
/// Send a message to target, and block the thread until the message returns (except when it's oneway).
-(void)forwardInvocation:(NSInvocation*)invocation;
-(NSMethodSignature*)methodSignatureForSelector:(SEL)selector;

/// Return self.
-(id)send;

/// Get/set dispatch queue.
-(void)setDispatchQueue:(AKDispatchQueue*)queue;
-(AKDispatchQueue*)dispatchQueue;

/// Set protocol of private messages.
-(void)setPrivateMessages:(Protocol*)messages;

/// Atomically swap the targets.
-(BOOL)swapCurrentTarget:(id)target forNewTarget:(id)newTarget;
@end

