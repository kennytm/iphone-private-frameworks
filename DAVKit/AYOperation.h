/**
 * This header is generated by class-dump-z 0.2-1.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/DAVKit.framework/DAVKit
 */

#import <Foundation/NSObject.h>

@class NSMutableDictionary, NSLock, NSThread, NSError;
@protocol AYNotificationDelegate, AYGroup;

@interface AYOperation : NSObject {
	id _asyncProxy;
	NSThread* _currentThread;
	NSThread* _baseThread;
	AYOperation* _parentOperation;
	AYOperation* _mainOperation;
	AYOperation* _currentChildOperation;
	id<AYGroup> _group;
	NSLock* _operationLock;
	NSError* _error;
	BOOL _operationEnded;
	BOOL _operationAborted;
	BOOL _silent;
	BOOL _canAbortNow;
	BOOL _inAbortProcess;
	int _currentMark;
	void* _reserved;
	id<AYNotificationDelegate> _notificationDelegate;
	NSMutableDictionary* _privateInfos;
}
+(void)_initCurrentThread;
+(void)_initMainThread;
// inherited: +(void)initialize;
+(void)_noLockForThread:(id)thread;
+(void)_lockForAllThreads;
+(BOOL)_lockWaitingForOperation;
+(void)lockOperations;
+(void)unlockOperations;
+(id)mainThread;
+(BOOL)_dispatchNextOperationInQueue;
+(void)_workerThread;
+(void)_launchOneThread;
+(void)pushInvocation:(id)invocation;
+(BOOL)popOperation:(id)operation;
+(void)unblockAllOperationsForGroup:(id)group;
+(void)endAllPendingOperationsOfGroup:(id)group withError:(id)error;
+(id)currentOperation;
+(void)_setCurrentOperation:(id)operation;
-(void)_setCurrentThread:(id)thread;
// inherited: -(instancetype)init;
// inherited: -(void)dealloc;
-(id)async;
-(id)syncFor:(id)aFor;
-(id)synchronous;
-(void)_setCurrentChildOperation:(id)operation;
-(id)_currentChildOperation;
-(id)parentOperation;
-(id)mainOperation;
-(id)operationThread;
-(id)baseThread;
-(BOOL)isAsync;
-(void)lockOperation;
-(void)unlockOperation;
-(void)_handleEventRecursively:(id)recursively;
-(void)_sendEventToThreadLocked:(id)threadLocked;
-(void)sendEventToThread:(id)thread;
-(void)_startAbortProcess;
-(BOOL)handleEventInThread:(id)thread;
-(void)abortOperation;
-(void)waitForOperationToEnd;
-(BOOL)hasOperationEnded;
-(void)resetOperation;
-(void)setOperationGroup:(id)group;
-(id)operationGroup;
-(void)setOperationCompanion:(id)companion;
-(id)operationCompanion;
-(BOOL)isRunLoopBased;
-(void)runOperationWithTimeOut:(unsigned)timeOut;
-(void)endOperationWithError:(id)error;
-(void)markWithTag:(int)tag;
-(void)markWithTag:(int)tag notify:(BOOL)notify;
-(int)currentMark;
-(void)setSilent:(BOOL)silent;
-(BOOL)isSilent;
-(void)handleNotificationOfChildOperation:(id)childOperation notification:(id)notification;
-(void)notifyWithName:(id)name infos:(id)infos;
-(void)setNotificationDelegate:(id)delegate;
-(id)notificationDelegate;
-(long long)operationProgress;
-(long long)operationTotal;
-(void)setCanAbortNow:(BOOL)now;
-(BOOL)canAbortNow;
-(void)operationWillAbort;
-(void)clearError;
-(void)setError:(id)error;
-(id)error;
-(void)finalizeOperation;
-(void)postOperation;
-(void)setInfo:(id)info forKey:(id)key;
-(id)infoForKey:(id)key;
-(void)removeInfoForKey:(id)key;
@end

