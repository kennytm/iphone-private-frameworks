/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/MusicLibrary.framework/MusicLibrary
 */

#import "MusicLibrary-Structs.h"
#import "MLTrack.h"

@class MLChapterTOC;

__attribute__((visibility("hidden")))
@interface MLTrackRepSQL : MLTrack {
@private
	MLChapterTOC* _chapterTOC;
}
@property(assign, nonatomic) BOOL hasChanges;
-(instancetype)initWithDBRecord:(void*)dbrecord;
-(instancetype)initWithTrackContext:(void*)trackContext;
-(BOOL)_isFilePathPlayable;
-(void*)dbRecord;
-(int)dbRecordID;
-(void)dealloc;
-(BOOL)__dbRecordsEqual:(id)equal;
-(BOOL)isEqual:(id)equal;
-(BOOL)isEqualToTrack:(id)track;
-(unsigned)hash;
-(unsigned long long)persistentUID;
-(unsigned long long)globalID;
-(unsigned long)uniqueID;
-(unsigned long long)artistPID;
-(unsigned long long)albumPID;
-(id)filePath;
-(unsigned long long)fileSize;
-(id)title;
-(id)artist;
-(id)albumArtist;
-(id)album;
-(id)composer;
-(id)genre;
-(id)grouping;
-(id)infoShortDescription;
-(id)infoDescription;
-(id)comments;
-(id)copyright;
-(double)releaseDate;
-(id)_sortStringValueForProperty:(int)property;
-(id)sortTitle;
-(id)sortArtist;
-(id)sortAlbum;
-(id)sortAlbumArtist;
-(id)sortComposer;
-(id)lyrics;
-(void)setLyrics:(id)lyrics;
-(id)podcastName;
-(id)podcastURL;
-(id)podcastDirectStoreURL;
-(unsigned long long)storeItemAdamID;
-(unsigned long long)storePlaylistAdamID;
-(id)seriesDisplayName;
-(id)seasonDisplayName;
-(unsigned)seasonNumber;
-(unsigned)episodeNumber;
-(unsigned long)audibleDRMGroupID;
-(BOOL)isAudibleAudioBook;
-(unsigned long)trackIndexInAlbum;
-(unsigned long)numberOfTracksInAlbum;
-(unsigned long)discNumber;
-(unsigned long)numberOfDiscs;
-(id)contentRatingInfo;
-(id)videoCodecs;
-(id)movieInfo;
-(unsigned long)ratingLevel;
-(unsigned long)bpm;
-(unsigned long)year;
-(unsigned long long)accountID;
-(unsigned long)mediaType;
-(BOOL)isCompilationTrack;
-(BOOL)isExcludedFromShuffle;
-(BOOL)isITunesU;
-(BOOL)isOTAPurchasedContent;
-(BOOL)hasLyrics;
-(BOOL)hasVideoData;
-(BOOL)isRental;
-(BOOL)isDemoRental;
-(double)demoRentalExpirationDate;
-(BOOL)isExplicitBasedOnCurrentRestrictions;
-(id)eqPresetName;
-(float)volumeAdjustment;
-(float)volumeNormalization;
-(int)durationInMS;
-(int)startTimeInMS;
-(int)customStopTimeInMS;
-(int)totalTimeInMS;
-(void)gaplessHeuristicInfo:(unsigned*)info duration:(unsigned*)duration lastPacketsResync:(unsigned*)resync encodingDelay:(unsigned*)delay encodingDrain:(unsigned*)drain;
-(id)chapterTOC;
-(BOOL)hasChapterData;
-(BOOL)videoHasAlternateAudio;
-(BOOL)videoHasSubtitles;
-(unsigned)videoAudioTrackID;
-(unsigned)videoSubtitleTrackID;
-(void)setVideoAudioTrackID:(unsigned)anId;
-(void)setVideoSubtitleTrackID:(unsigned)anId;
-(unsigned long)imageDBRecordID:(int)anId;
-(BOOL)rating;
-(void)setRating:(BOOL)rating;
-(BOOL)hasNominalAmountBeenPlayed;
-(void)markNominalAmountHasBeenPlayed;
-(void)incrementSkipCount;
-(unsigned)skipCount;
-(double)lastSkippedDate;
-(void)reallyIncrementPlayCount;
-(unsigned)playCount;
-(double)lastPlayedDate;
-(BOOL)markAsDeleted;
-(BOOL)isHidden;
-(BOOL)markHidden:(BOOL)hidden;
-(BOOL)shouldBookmarkLastPlayedTime;
-(BOOL)hasLastPlayedBookmarkTime;
-(void)updateLastPlayedBookmarkTimeInSeconds:(double)seconds;
-(double)lastPlayedBookmarkTimeInSeconds;
@end

