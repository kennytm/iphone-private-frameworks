/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/MusicLibrary.framework/MusicLibrary
 */

#import "MusicLibrary-Structs.h"
#import <Foundation/NSObject.h>

@class NSMutableArray, NSString;

__attribute__((visibility("hidden")))
@interface MLSQLCode : NSObject {
@private
	NSString* _text;
	NSMutableArray* _bindings;
	MLSQLCode* _orderBy;
	MLSQLCode* _groupBy;
	MLSQLCode* _limitBy;
	NSMutableArray* _joins;
	NSMutableArray* _subexpressions;
	NSMutableArray* _subexpressionOperators;
	NSMutableArray* _predicates;
	NSMutableArray* _predicateOperators;
	unsigned _isTextTerminated : 1;
	unsigned _isToken : 1;
}
+(id)openParenCode;
+(id)closeParenCode;
+(id)andOperatorCode;
+(id)orOperatorCode;
+(id)codeWithSQLFormat:(id)sqlformat;
+(BOOL)performWithConnection:(CPSqliteConnection*)connection sqlFormat:(id)format;
+(BOOL)ownsToken:(id)token;
+(id)expressionToken;
+(id)expressionTokenWhenJoinedToCodeClass:(Class)codeClass joinOp:(id)op;
+(id)_shallowDescriptionOfCodeArray:(id)codeArray;
+(BOOL)performWrite:(BOOL)write store:(CPRecordStoreRef)store transactionType:(unsigned)type arrayOfCode:(id)code;
+(BOOL)performWriteToStore:(CPRecordStoreRef)store transactionType:(unsigned)type code:(id)code;
+(BOOL)performReadFromStore:(CPRecordStoreRef)store code:(id)code;
+(unsigned long long)lastInsertionROWID:(CPSqliteConnection*)rowid;
-(BOOL)isToken;
-(void)_initBindings:(unsigned)bindings;
-(id)__initWithSQLBindingCount:(long)sqlbindingCount sqlString:(id)string;
-(instancetype)init;
-(instancetype)initToken:(id)token;
-(instancetype)initWithSQLBindingCount:(long)sqlbindingCount sqlFormat:(id)format;
-(instancetype)initWithSQLFormat:(id)sqlformat;
-(void)dealloc;
-(BOOL)allowsJoins;
-(id)_descriptionWithOptions:(unsigned)options level:(int)level;
-(id)_descriptionWithOptions:(unsigned)options;
-(id)description;
-(id)_copyOfVisitableCodeArray;
-(void)__gatherCodeInto:(id)into predicateOperators:(id)operators bindings:(id)bindings codeBaseClass:(Class)aClass deep:(BOOL)deep filterUsing:(/*function-pointer*/ void*)aUsing filterContext:(void*)context;
-(void)__gatherCodeInto:(id)into predicateOperators:(id)operators bindings:(id)bindings codeBaseClass:(Class)aClass deep:(BOOL)deep;
-(BOOL)_gatherBindings:(id*)bindings deep:(BOOL)deep;
-(BOOL)_gatherCode:(id*)code withBaseClass:(Class)baseClass deep:(BOOL)deep filterUsing:(/*function-pointer*/ void*)aUsing filterContext:(void*)context;
-(BOOL)_gatherJoins:(id*)joins deep:(BOOL)deep;
-(BOOL)_gatherPredicates:(id*)predicates predicateOperators:(id*)operators deep:(BOOL)deep;
-(id)_copyFlattenedCodeTextByRequiringSemiColon:(BOOL)colon;
-(id)_copyShallowCodeTextByResolvingBindings;
-(id)_copyFlattenedCodeTextByResolvingBindings;
-(void)_expressionTextByJoiningInto:(id*)into expression:(id)expression joiningOps:(id)ops lastJoinedCodeClass:(Class)aClass;
-(id)_expressionTextByJoiningExpression:(id)expression joiningOps:(id)ops lastJoinedCodeClass:(Class)aClass;
-(id)_copyFlattenedCodeText;
-(unsigned)_bindParametersToSQLStatement:(CPSqliteStatement*)sqlstatement initialBindingIndex:(unsigned)index;
-(void)_checkValidFlattenedCodeText:(id)text splitIntoMultipleIfNecessary:(BOOL)necessary;
-(BOOL)_compiledSqliteStatementForConnection:(CPSqliteConnection*)connection preparedStatement:(CPSqliteStatement**)statement performStatement:(BOOL)statement3 splitIntoMultipleIfNecessary:(BOOL)necessary;
-(id)_text;
-(BOOL)isNoOp;
-(long)countOfBindings;
-(void)setBindingAtIndex:(long)index toUInt32Value:(unsigned)uint32Value;
-(void)setBindingAtIndex:(long)index toBooleanValue:(unsigned char)booleanValue;
-(void)setBindingAtIndex:(long)index toUInt64Value:(unsigned long long)uint64Value;
-(void)setBindingAtIndex:(long)index toSInt64Value:(long long)sint64Value;
-(void)setBindingAtIndex:(long)index toStringValue:(id)stringValue;
-(void)setBindingAtIndex:(long)index toCFStringRef:(CFStringRef)cfstringRef;
-(void)setBindingAtIndex:(long)index toDataValue:(id)dataValue;
-(void)setBindingAtIndex:(long)index toCFDataRef:(CFDataRef)cfdataRef;
-(void)setBindingAtIndex:(long)index toCPRecord:(void*)cprecord;
-(void)setBindingAtIndex:(long)index toCPRecordID:(int)cprecordID store:(CPRecordStoreRef)store;
-(void)setBindingAtIndex:(long)index toCodeBinding:(id)codeBinding;
-(void)setBindingsInRange:(XXStruct_K5nmsA)range toCodeBindings:(id)codeBindings;
-(long)countOfSubexpressions;
-(id)subexpressionAtIndex:(long)index;
-(void)_insertSubexpression:(id)subexpression atIndex:(unsigned)index withBinaryOp:(id)binaryOp;
-(void)appendSubexpression:(id)subexpression;
-(void)appendSubexpression:(id)subexpression withBinaryOp:(id)binaryOp;
-(void)appendJoin:(id)join;
-(void)appendJoins:(id)joins;
-(id)joins;
-(id)joinSQLString;
-(void)appendPredicate:(id)predicate withBinaryOp:(id)binaryOp;
-(id)predicates;
-(id)orderByCode;
-(id)groupByCode;
-(id)limitByCode;
-(void)setOrderByCode:(id)code;
-(void)setGroupByCode:(id)code;
-(void)setLimitByCode:(id)code;
-(BOOL)performWithConnection:(CPSqliteConnection*)connection;
-(BOOL)performAsMultipleStatementsWithConnection:(CPSqliteConnection*)connection;
-(CPSqliteStatement*)copyCompiledSqliteStatementForConnection:(CPSqliteConnection*)connection;
@end

