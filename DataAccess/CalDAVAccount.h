/**
 * This header is generated by class-dump-z 0.2-1.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/DataAccess.framework/DataAccess
 */

#import "CalNetworkChangeNotificationListener.h"
#import <Foundation/NSObject.h>
#import "DataAccess-Structs.h"

@class CalDAVOperationQueue, MobileCalDAVAccount, DAVSession, NSError, CalDAVPrincipal, NSRecursiveLock, NSString, NSArray;

@interface CalDAVAccount : NSObject <CalNetworkChangeNotificationListener> {
	CalDAVPrincipal* _principal;
	MobileCalDAVAccount* _mobileAccount;
	BOOL _isDelegate;
	BOOL _isWritable;
	NSString* _principalPath;
	NSString* _userDisplayName;
	NSString* _uid;
	DAVSession* _session;
	NSError* _lastOperationError;
	NSArray* _tempCalendarList;
	int _queryOfficeHoursRunning;
	NSRecursiveLock* _connectedStateLock;
	int _connectedState;
	BOOL _userPrefersOffline;
	NSError* _connectionError;
	CalDAVOperationQueue* _operationQueue;
	BOOL _checkingCredentials;
}
-(void)setPrincipal:(id)principal;
-(id)principal;
-(id)mobileAccount;
-(void)setMobileAccount:(id)account;
-(instancetype)initWithConfiguration:(id)configuration;
// inherited: -(instancetype)init;
-(id)configuration;
-(void)setupSources;
// in a protocol: -(void)systemNetworkDidChange;
-(void)attemptAutomaticConnect;
-(void)attemptAutomaticConnectOnBackgroundThread;
-(void)automaticConnectDone:(id)done;
// in a protocol: -(void)systemWillSleep;
// in a protocol: -(void)systemDidWake;
// inherited: -(void)dealloc;
-(id)operationQueue;
-(BOOL)isDelegate;
-(void)setIsDelegate:(BOOL)delegate;
-(BOOL)isWritable;
-(void)setIsWritable:(BOOL)writable;
-(id)principalPath;
-(void)setPrincipalPath:(id)path;
-(id)fullPrincipalAddress;
-(void)setFullPrincipalAddress:(id)address;
-(id)login;
-(void)setLogin:(id)login;
-(id)displayName;
-(void)setDisplayName:(id)name;
-(id)copyWithZone:(NSZone*)zone;
-(void)setUid:(id)uid;
-(id)uid;
-(id)key;
-(void)setLastOperationError:(id)error;
-(id)lastOperationError;
-(void)updateSessionTimeout:(id)timeout;
-(id)_systemVersionString;
-(id)_icalendarVersionString;
-(id)_userAgentString;
-(id)session;
-(void)invalidateSession;
-(id)getStringForState:(int)state;
-(int)connectedState;
-(void)setConnectedState:(int)state;
-(int)statusForConnectedState;
-(BOOL)isBusy;
-(BOOL)userPrefersOffline;
-(void)setUserPrefersOffline:(BOOL)offline;
-(BOOL)isOffline;
-(void)logError:(id)error;
-(void)setSourceError:(id)error;
-(void)doneCheckingCredentials:(BOOL)credentials;
-(void)refreshAllSources;
-(void)goOfflineAfterError:(BOOL)error;
-(BOOL)isTransientError:(id)error;
-(BOOL)isConnectionError:(id)error;
-(BOOL)isConnectionErrorForDAVError:(id)daverror;
-(BOOL)isConnectionErrorForAYError:(id)ayerror;
-(BOOL)isConnectionErrorForOSStatusError:(id)osstatusError;
-(BOOL)isConnectionErrorForNSPosixError:(id)nsposixError;
-(BOOL)isConnectionErrorForAYNetDBError:(id)aynetDBError;
-(BOOL)isConnectionErrorForStreamSocketSSLError:(id)streamSocketSSLError;
-(BOOL)isConnectionErrorForCFNetworkHTTPError:(id)cfnetworkHTTPError;
-(BOOL)isConnectionErrorForGenericError:(id)genericError;
-(BOOL)isRefreshing;
-(BOOL)isPendingRefresh;
-(void)cancelRefresh;
-(void)refreshWithContext:(id)context;
@end

