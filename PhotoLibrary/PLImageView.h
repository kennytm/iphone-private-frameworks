/**
 * This header is generated by class-dump-z 0.2-0.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/PhotoLibrary.framework/PhotoLibrary
 */

#import <Availability2.h>

#if __IPHONE_OS_VERSION_MAX_ALLOWED >= __IPHONE_3_2

// me being lazy here. no diff.

#import <UIKit/UIImageView.h>
@class PLVideoView, UILabel, NSString;

@interface PLImageView : UIImageView {
	NSString* _name;
	UIView* _borderView;
	PLVideoView* _videoView;
	UILabel* _textBadge;
	unsigned _shadowEnabled : 1;
	unsigned _suppressShadowDrawing : 1;
	unsigned _borderIsVisible : 1;
	float _aspectRatio;
	double _lastBorderAlphaTime;
	double _lastShadowAlphaTime;
	float _transitionProgress;
	BOOL _edgeAntialiasingEnabled;
}
@property(copy, nonatomic) NSString* name;
@property(assign, nonatomic) float transitionProgress;
@property(retain, nonatomic) PLVideoView* videoView;
@property(assign, nonatomic) float borderAlpha;
@property(assign, nonatomic, getter=isBorderVisible) BOOL borderVisible;
@property(assign, nonatomic, getter=isDimmed) BOOL dimmed;
@property(assign, nonatomic, getter=isShadowEnabled) BOOL shadowEnabled;
+(void)initialize;
+(BOOL)shouldDrawShadows;
+(id)textBadgeForString:(id)string photoSize:(CGSize)size;
-(id)textBadgeString;
-(void)setTextBadgeString:(id)string;
-(instancetype)initWithFrame:(CGRect)frame;
-(void)dealloc;
-(CGSize)sizeThatFits:(CGSize)fits allowRounding:(BOOL)rounding;
-(CGSize)sizeThatFits:(CGSize)fits;
-(void)renderSnapshotInContext:(CGContextRef)context;
-(void)layoutSubviews;
-(void)_updateShadowPath;
-(void)setImage:(id)image;
-(void)parentDidLayout;
-(void)setBorderAlpha:(float)alpha forced:(BOOL)forced;
-(void)setBorderWidthScale:(float)scale heightScale:(float)scale2;
-(void)setEdgeAntialiasingEnabled:(BOOL)enabled;
@end

#else

#import "PhotoLibrary-Structs.h"
#import <UIKit/UITiledView.h>
#import "PLItemView.h"

@class MLPhoto;

@interface PLImageView : UITiledView <PLItemView> {
	id _delegate;
	id _orientationDelegate;
	CGImageRef _fullSizeImageRef;
	CGImageRef _thumbnailImageRef;
	CGImageRef _contentsImageRef;
	CGAffineTransform _contentsTransform;
	CGAffineTransform _imageTransform;
	int _imageOrientation;
	int _orientationWhenLastDisplayed;
	CGSize _fullSize;
	MLPhoto* _modelImage;
	BOOL _setOriginDuringAnimation;
	float _startScale;
	float _endScale;
	CGSize _endContentSize;
	CGSize _startContentSize;
	float _zoomProgress;
	BOOL _zoomToFillInsteadOfToFit;
	BOOL _useLessThanMinZoomForZoomedOutTest;
	BOOL _allowZoomToFill;
	float _imageViewZoomScale;
	double _lastTouchEventTimestamp;
}
// inherited: +(Class)tileClass;
// inherited: -(instancetype)initWithFrame:(CGRect)frame;
// inherited: -(CGRect)visibleRect;
-(void)setDelegate:(id)delegate;
-(void)setOrientationDelegate:(id)delegate;
// inherited: -(void)dealloc;
-(void)_setOriginForContentSize:(CGSize)contentSize;
-(void)centerInScrollerIfNeeded;
-(void)_setImageViewZoomScale:(float)scale;
// in a protocol: -(void)_setZoomScale:(float)scale duration:(double)duration;
-(CGPoint)setZoomScaleWithoutZoomGesture:(float)gesture;
// in a protocol: -(int)orientationWhenLastDisplayed;
// in a protocol: -(void)setOrientationWhenLastDisplayed:(int)displayed;
-(CGSize)_scrollerContentSize;
-(void)zoomToScale:(float)scale;
-(void)animator:(id)animator stopAnimation:(id)animation;
-(void)_prepareForAnimatedZoomToScale:(float)scale animated:(BOOL)animated;
-(void)_zoomToScrollPoint:(CGPoint)scrollPoint scale:(float)scale duration:(float)duration event:(GSEventRef)event;
-(CGImageRef)imageRef;
-(int)imageOrientation;
// inherited: -(BOOL)_canDrawContent;
-(BOOL)hasFullSizeImage;
-(void)ensureFullSizeImageLoaded;
-(void)setAllowsZoomToFill:(BOOL)fill;
// in a protocol: -(void)updateZoomScales;
-(int)defaultZoomStyle;
-(BOOL)_getContentsTransform:(CGAffineTransform*)transform contentsGravity:(id*)gravity forSize:(CGSize)size;
// inherited: -(CGRect)_visibleRect;
-(void)_updateLayerContents;
-(CGImageRef)_createLayerContentsForTileFrame:(CGRect)tileFrame contentsTransform:(CGAffineTransform*)transform contentsGravity:(id*)gravity;
-(void)setFullSizeImageRef:(CGImageRef)ref orientation:(int)orientation;
-(void)_finishedLoadingImageRef:(id)ref;
// inherited: -(void)setTilingEnabled:(BOOL)enabled;
-(void)movedFromSuperview:(id)superview;
// in a protocol: -(float)minRotatedScale;
-(float)_calculateZoomScale:(BOOL)scale;
-(float)minZoomScale;
-(float)zoomToFillScale;
// in a protocol: -(float)defaultZoomScale;
-(void)setThumbnail:(CGImageRef)thumbnail;
// in a protocol: -(BOOL)isZoomedOut;
-(id)modelImage;
-(void)setModelImage:(id)image;
// in a protocol: -(id)description;
-(void)_gestureChanged:(int)changed event:(GSEventRef)event;
-(BOOL)_alwaysHandleScrollerMouseEvent;
// inherited: -(void)touchesBegan:(id)began withEvent:(id)event;
// inherited: -(void)touchesMoved:(id)moved withEvent:(id)event;
// inherited: -(void)touchesEnded:(id)ended withEvent:(id)event;
// inherited: -(void)mouseDown:(GSEventRef)down;
// inherited: -(void)mouseUp:(GSEventRef)up;
// inherited: -(void)mouseDragged:(GSEventRef)dragged;
// in a protocol: -(float)_zoomScale;
-(float)_minimumZoomScaleDelta;
-(void)zoomToWindowPoint:(CGPoint)windowPoint scale:(float)scale duration:(float)duration constrainScrollPoint:(BOOL)point event:(GSEventRef)event;
@end

#endif
