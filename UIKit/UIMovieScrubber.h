/**
 * This header is generated by class-dump-z 0.1-11o.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 */

#import "UIMovieScrubberTrackViewDelegate.h"
#import "UIMovieScrubberTrackViewDataSource.h"
#import "UIKit-Structs.h"
#import <UIKit/UIControl.h>
#import <Availability2.h>

@class UIMovieScrubberEditingView, UILabel, UIImage, UIImageView, UIMovieScrubberTrackView;
@protocol UIMovieScrubberDataSource, UIMovieScrubberDelegate;

@interface UIMovieScrubber : UIControl <UIMovieScrubberTrackViewDataSource, UIMovieScrubberTrackViewDelegate> {
	UIImageView* _thumbView;
	UIMovieScrubberTrackView* _trackView;
	UIMovieScrubberEditingView* _editingView;
	UILabel* _elapsedLabel;
	UILabel* _remainingLabel;
	int _timeComponents;
	UIImage* _fillImage;
	UIImage* _innerShadowImage;
	UIImage* _maskImage;
	UIImage* _shadowImage;
	id<UIMovieScrubberDataSource> _dataSource;
	id<UIMovieScrubberDelegate> _delegate;
	CGRect _trackRect;
	float _hitOffset;
	float _zoomDelay;
	BOOL _showTimeViews;
	BOOL _editable;
	double _value;
	double _maximumValue;
	double _minimumValue;
	CGPoint _touchLocationWhenTrackPressBegan;
	double _trimStartValue;
	double _trimEndValue;
	double _minTrimmedLength;
	double _maxTrimmedLength;
#if __IPHONE_OS_VERSION_MAX_ALLOWED >= __IPHONE_3_1
	double _zoomAnimationDuration;
	double _zoomAnimationDelay;
#endif
	struct {
		unsigned continuous : 1;
		unsigned animating : 1;
		unsigned creatingSnapshot : 1;
		unsigned needsReload : 1;
		unsigned layoutTimeViews : 1;
		unsigned computeTrackRect : 1;
		unsigned clampingTrimRange;
		unsigned zoomed : 1;
		unsigned zoomAnimating : 1;
		unsigned trackIsPressed : 1;
#if __IPHONE_OS_VERSION_MAX_ALLOWED >= __IPHONE_3_1
		unsigned trackAnimating : 1;
#endif
		unsigned thumbIsVisible : 1;
		unsigned handleIsPressed : 1;
		unsigned willBeginEditing : 1;
		unsigned editing : 1;
		unsigned editingHandle;
		unsigned rotationDisabled;
		unsigned delegateValueDidChange : 1;
		unsigned delegateStartValueDidChange : 1;
		unsigned delegateEndValueDidChange : 1;
		unsigned delegateWillBeginRequestingThumbnails : 1;
		unsigned delegateDidFinishRequestingThumbnails : 1;
		unsigned delegateDidBeginEditing : 1;
		unsigned delegateEditingAnimationFinished : 1;
	} _sliderFlags;
}
@property(assign, nonatomic) float zoomDelay;
@property(assign, nonatomic) BOOL showTimeViews;
@property(assign, nonatomic) double value;
@property(assign, nonatomic) double duration;
@property(assign, nonatomic) double maximumTrimLength;
@property(assign, nonatomic) double minimumTrimLength;
@property(assign, nonatomic) double trimStartValue;
@property(assign, nonatomic) double trimEndValue;
@property(assign, nonatomic, getter=isEditing) BOOL editing;
@property(assign, nonatomic) id<UIMovieScrubberDelegate> delegate;
@property(assign, nonatomic) id<UIMovieScrubberDataSource> dataSource;
@property(assign, nonatomic, getter=isContinuous) BOOL continuous;
@property(assign, nonatomic, getter=isEditable) BOOL editable;
@property(assign, nonatomic) BOOL thumbIsVisible;
+(id)timeStringForSeconds:(int)seconds forceFullWidthComponents:(BOOL)components isElapsed:(BOOL)elapsed;
-(instancetype)init;
-(instancetype)initWithFrame:(CGRect)frame;
-(void)dealloc;
-(void)reloadData;
-(id)_scriptingInfo __OSX_AVAILABLE_STARTING(__MAC_NA, __IPHONE_3_1);
-(id)scriptingInfoWithChildren __OSX_AVAILABLE_STARTING(__MAC_NA, __IPHONE_3_1);
-(BOOL)editable;
-(void)_animateAfterEdit:(BOOL)edit;
-(void)setEditing:(BOOL)editing animated:(BOOL)animated;
-(void)animateAfterEdit;
-(void)animateCancelEdit;
-(void)_trimAnimationDidStop:(id)_trimAnimation finished:(id)finished context:(id)context;
-(void)setZoomAnimationDuration:(float)duration;
-(void)_computeTrackRectForBounds:(CGRect)bounds;
-(CGRect)trackRect;
-(CGRect)_editingRect;
-(CGRect)thumbRectForValue:(float)value;
-(void)setFrame:(CGRect)frame;
-(void)layoutSubviews;
-(void)_initSubviews;
-(void)_updateTimes;
-(void)setValue:(double)value animated:(BOOL)animated;
-(void)_updateThumbLocation;
-(void)_setValue:(double)value andSendAction:(BOOL)action;
-(float)_editingFrameDeltaXForValue:(float)value handle:(int)handle;
-(CGRect)_editingViewFrameForStartValueWithFrame:(CGRect)frame;
-(CGRect)_editingViewFrameForEndValueWithFrame:(CGRect)frame;
-(void)_sliderAnimationWillStart:(id)_sliderAnimation context:(void*)context;
-(void)_sliderAnimationDidStop:(id)_sliderAnimation finished:(id)finished context:(void*)context;
-(void)_sendDelayedActions;
-(float)_valueForTouch:(id)touch;
-(void)setRotationDisabled:(BOOL)disabled;
-(void)_trackPressWasHeld;
-(void)_beginTrackPressWithTouch:(id)touch touchesBegan:(BOOL)began;
-(void)_cancelTrackPress:(BOOL)press;
-(void)_cancelTrackPressIfNeccessaryWithTouch:(id)touch;
-(BOOL)pointInsideThumb:(CGPoint)thumb withEvent:(id)event;
-(BOOL)beginTrackingWithTouch:(id)touch withEvent:(id)event;
-(BOOL)continueTrackingWithTouch:(id)touch withEvent:(id)event;
-(void)endTrackingWithTouch:(id)touch withEvent:(id)event;
-(void)touchesCancelled:(id)cancelled withEvent:(id)event;
-(void)_controlTouchBegan:(id)began withEvent:(id)event;
-(void)_controlTouchMoved:(id)moved withEvent:(id)event;
-(void)_controlTouchEnded:(id)ended withEvent:(id)event;
-(BOOL)cancelTouchTracking;
-(BOOL)_alwaysHandleScrollerMouseEvent;
-(BOOL)isAnimatingValueChange;
-(void)_sliderValueDidChange:(id)_sliderValue;
-(double)movieScrubberTrackViewDuration:(id)duration;
-(id)movieScrubberTrackView:(id)view evenlySpacedTimestamps:(int)timestamps startingAt:(id)at endingAt:(id)at4;
-(id)movieScrubberTrackView:(id)view timestampsStartingAt:(id)at endingAt:(id)at3 maxCount:(int)count;
-(void)movieScrubberTrackView:(id)view requestThumbnailImageForTimestamp:(id)timestamp;
-(void)setThumbnailImage:(CGImageRef)image forTimestamp:(id)timestamp;
-(float)movieScrubberTrackViewThumbnailAspectRatio:(id)ratio;
-(void)movieScrubberTrackView:(id)view sizeWidthDelta:(float)delta originXDelta:(float)delta3 minimumVisibleValue:(float)value maximumVisibleValue:(float)value5;
-(void)movieScrubberTrackViewDidExpand:(id)movieScrubberTrackView;
-(void)movieScrubberTrackViewDidCollapse:(id)movieScrubberTrackView;
-(void)movieScrubberTrackViewWillBeginRequestingThumbnails:(id)movieScrubberTrackView;
-(void)movieScrubberTrackViewDidFinishRequestingThumbnails:(id)movieScrubberTrackView;
@end

