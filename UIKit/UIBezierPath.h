/**
 * This header is generated by class-dump-z 0.1-11o.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 */

#import <Availability2.h>

typedef enum {
	UIBezierPathRoundedLeftEdge = 1,
	UIBezierPathRoundedTopEdge = 2,
	UIBezierPathRoundedRightEdge = 4,
	UIBezierPathRoundedBottomEdge = 8,
} UIBezierPathRoundedEdges;

typedef enum {
	UIBezierPathRoundedTopLeftCorner = 1,
	UIBezierPathRoundedTopRightCorner = 2,
	UIBezierPathRoundedBottomLeftCorner = 4,
	UIBezierPathRoundedBottomRightCorner = 8,
} UIBezierPathRoundedCorners;

#if __IPHONE_OS_VERSION_MAX_ALLOWED >= __IPHONE_3_2

#include_next <UIKit/UIBezierPath.h>

@interface UIBezierPath ()
+(id)_bezierPathWithRoundedRect:(CGRect)roundedRect byRoundingCorners:(unsigned)corners cornerRadius:(float)radius;
+(id)bezierPathForBottomOfRect:(CGRect)rect withCornerRadius:(float)cornerRadius;
+(id)bezierPathForTopOfRect:(CGRect)rect withCornerRadius:(float)cornerRadius;
+(id)roundedRectBezierPath:(CGRect)path withRoundedEdges:(UIBezierPathRoundedEdges)roundedEdges;
+(id)roundedRectBezierPath:(CGRect)path withRoundedCorners:(UIBezierPathRoundedCorners)roundedCorners withCornerRadius:(float)cornerRadius;
+(id)roundedRectBezierPath:(CGRect)path withRoundedCorners:(UIBezierPathRoundedCorners)roundedCorners withCornerRadii:(NSArray*)cornerRadii;
-(CGPathRef)_createMutablePathByDecodingData:(id)data;
-(id)_initWithCGMutablePath:(CGPathRef)cgmutablePath;
-(CGPathRef)_mutablePath;
-(void)appendBezierPath:(id)path;
-(void)appendBezierPathWithArcWithCenter:(CGPoint)center radius:(float)radius startAngle:(float)angle endAngle:(float)angle4 clockwise:(BOOL)clockwise;
-(void)appendBezierPathWithOvalInRect:(CGRect)rect;
-(void)appendBezierPathWithOvalInRect:(CGRect)rect transform:(CGAffineTransform)transform;
-(void)appendBezierPathWithRect:(CGRect)rect;
-(void)clip;
-(void)lineToPoint:(CGPoint)point;
@end

#else

#import "UIKit-Structs.h"
#import "UIBezierPath.h"
#import <Foundation/NSObject.h>

@interface UIBezierPath : NSObject {
	CGPathRef _pathRef;
	float _width;
}
+(id)bezierPath;
+(id)bezierPathForBottomOfRect:(CGRect)rect withCornerRadius:(float)cornerRadius;
+(id)bezierPathForTopOfRect:(CGRect)rect withCornerRadius:(float)cornerRadius;
+(id)bezierPathKnockingOutTopOfRect:(CGRect)rect withCornerRadius:(float)cornerRadius;
+(id)bezierPathKnockingOutBottomOfRect:(CGRect)rect withCornerRadius:(float)cornerRadius;
+(id)roundedRectBezierPath:(CGRect)path withRoundedEdges:(UIBezierPathRoundedEdges)roundedEdges;
+(id)roundedRectBezierPath:(CGRect)path withRoundedCorners:(UIBezierPathRoundedCorners)roundedCorners withCornerRadius:(float)cornerRadius;
+(id)roundedRectBezierPath:(CGRect)path withRoundedCorners:(UIBezierPathRoundedCorners)roundedCorners withCornerRadii:(NSArray*)cornerRadii;
+(id)roundedRectBezierPath:(CGRect)path withRoundedCorners:(UIBezierPathRoundedCorners)roundedCorners visibleEdges:(UIBezierPathRoundedEdges)edges cornerRadius:(float)radius;
-(instancetype)init;
-(void)dealloc;
-(void)moveToPoint:(CGPoint)point;
-(void)lineToPoint:(CGPoint)point;
-(void)appendBezierPath:(id)path;
-(void)appendBezierPathWithRect:(CGRect)rect;
-(void)appendBezierPathWithOvalInRect:(CGRect)rect;
-(void)appendBezierPathWithOvalInRect:(CGRect)rect transform:(CGAffineTransform)transform;
-(void)closePath;
-(void)appendBezierPathWithArcWithCenter:(CGPoint)center radius:(float)radius startAngle:(float)angle endAngle:(float)angle4 clockwise:(BOOL)clockwise;
-(void)setLineWidth:(float)width;
-(void)fill;
-(void)stroke;
-(void)clip;
@end

@interface UIBezierPath (UIInternal)
+(UIBezierPath*)roundedRectBezierPath:(CGRect)path withTopCornerRadius:(float)topCornerRadius withBottomCornerRadius:(float)bottomCornerRadius;
-(CGPathRef)_pathRef;
@end

#endif

@interface UIBezierPath (UIAutocorrectShadow)
+(id)shadowBezierPath:(CGRect)path withRoundedEdges:(int)roundedEdges;
@end

