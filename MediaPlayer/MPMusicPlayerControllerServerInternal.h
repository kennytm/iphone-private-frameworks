/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
 */

#import "MPServerObject.h"
#import "MPMusicPlayerController.h"

@class MLQuery, NSMutableArray;

@interface MPMusicPlayerControllerServerInternal : MPServerObject <MPMusicPlayerController> {
@private
	int _shuffleMode;
	int _repeatMode;
	NSMutableArray* _clientPorts;
	unsigned _useApplicationSpecificQueue : 1;
	MLQuery* _query;
	unsigned _queuePrepared : 1;
	int _extendedModeNotifyToken;
	unsigned _allowsRemoteUIAccess : 1;
}
+(BOOL)_canSeedGeniusWithItem:(id)item;
-(instancetype)init;
-(void)dealloc;
-(void)prepareForDecodingWithCoder:(id)coder;
-(void)setNowPlayingItem:(id)item;
-(id)nowPlayingItem;
-(void)setQueueWithQuery:(id)query;
-(void)setQueueWithItemCollection:(id)itemCollection;
-(void)play;
-(void)shuffle;
-(void)pause;
-(void)stop;
-(id)currentPlaybackTime;
-(void)setCurrentPlaybackTime:(id)time;
-(id)playbackState;
-(id)shuffleMode;
-(void)setShuffleMode:(id)mode;
-(id)repeatMode;
-(void)setRepeatMode:(id)mode;
-(void)beginSeekingForward;
-(void)beginSeekingBackward;
-(void)endSeeking;
-(void)skipToNextItem;
-(void)skipToBeginning;
-(void)skipToPreviousItem;
-(void)skipToBeginningOrPreviousItem;
-(id)isGeniusAvailable;
-(id)setQueueWithSeedItems:(id)seedItems;
-(id)queueAsQuery;
-(id)nowPlayingItemAtIndex:(id)index;
-(void)playItem:(id)item;
-(void)pauseWithFadeoutDuration:(id)fadeoutDuration;
-(void)setPlaybackSpeed:(id)speed;
-(id)playbackSpeed;
-(id)indexOfNowPlayingItem;
-(void)skipToNextChapter;
-(void)skipToPreviousChapter;
-(id)currentChapterIndex;
-(void)setCurrentChapterIndex:(id)index;
-(BOOL)useApplicationSpecificQueue;
-(void)setUseApplicationSpecificQueue:(id)queue;
-(id)allowsRemoteUIAccess;
-(void)setAllowsRemoteUIAccess:(id)access;
-(void)registerForServerDiedNotifications;
-(id)_avController;
-(void)_setQueueWithQuery:(id)query;
-(void)_prepareQueueIfNecessary;
-(void)prepareQueueForPlayback;
-(void)_registerClientPort:(unsigned)port;
-(void)_clientPortInvalidatedNotification:(id)notification;
-(void)_clientPortInvalidated:(id)invalidated;
-(void)_playbackStateDidChange:(id)_playbackState;
-(void)_itemDidChange:(id)_item;
@end

